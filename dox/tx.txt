# Transaction format

## General purpose transaction

type => tx fixstr (0xa0 ... 0xbf)
from => Address 8 (0xc4)
to => Address, 8 bites, binary (0xc4)
amount => Amount fixint/uintXX (0x00..0x7f or 0xcc .. 0xcf)
cur => currency name (ticker) fixstr (0xa0 .. 0xbf)
timestamp => timestamp в мс. int64 (0xcf)
seq => nonce, Int, fixint/uintXX (0x00..0x7f or 0xcc..0xcf)
extradata => additional info, text (JSON) fixstr/strXX (0xa0..0xbf or 0xd9..0xdb)




public_key => bin pubkey
signature => bin signature
extdata => arbitrary unsigned external data

encode:
to sign make hash:
sha256(msgpack encode(
        [type, from, to, amount, cur, timestamp, seq, extradata]
        ))
Sign and make obj:
msgpack (
        {
        type => type,
        tx => [from, to, amount, cur, timestamp, seq, extradata],
        sig => {
        bin_pub_key1 => bin_signature1,
        bin_pub_key2 => bin_signature2,
        ...
        }
        extdata => {}
        }
)

## Chain migration

from => Address
portout => Destination chain ID
timestamp => Timestamp ms
seq => Integer (nonce)


