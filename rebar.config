%% -*- mode: erlang -*-

{eunit_opts, [verbose, {skip_deps, true}]}.
{eunit_exclude_deps, true}.
{cover_enabled, true}.
{eunit_opts, [verbose]}.
{minimum_otp_vsn, "19.3"}.

{plugins, [rebar3_elvis_plugin]}.

{erl_opts, [
    fail_on_warning,
    warnings_as_errors,
    {parse_transform, lager_transform},
    {lager_truncation_size, 1024}
]}.
{deps, [
        {lager, "3.5.2"},
        {jsx, "2.8.3"},
        {cowboy, "2.1.0"},
        {gun, "1.0.0-pre.4b"},
        {rocksdb, "0.12.0"},
        {sync, {git, "https://github.com/rustyio/sync.git","master"}},
        {tinymq,  {git, "https://github.com/ChicagoBoss/tinymq", "0e47ab2ffb90d41885258e8940c3c8de9ba40637"}},
        {gb_merkle_trees, {git, "https://github.com/KrzysiekJ/gb_merkle_trees.git", "8ca2b71bcd87777eb10f25119a393ba7b4b3c219"}},
        {msgpack, {git, "https://github.com/cleverfox/msgpack-erlang", "84e1cec99c6f60e47d5c0abe758834034c41f3d0"}},
        {cowdb, {git, "https://github.com/refuge/cowdb.git", "40d72119a59407c7dddc140443b518a90338e347"}},
        %for diff {merklet, {git, "https://github.com/ferd/merklet.git", {tag, "1.0.1"}}},
        {mkmap, {git, "https://github.com/cleverfox/mkmap.git", "master"}},
        {tables, {git, "https://github.com/cleverfox/tables", "master"}},
        {tpic, {git, "ssh://git@git.wtf-rg.com:15616/thepower/tpic.git", "master"}},
        {tpecdsa, {git, "ssh://git@git.wtf-rg.com:15616/thepower/tpecdsa.git", "master"}}
]}.
{sub_dirs, ["apps/tpnode"]}.

{pre_hooks, [{compile, "escript generate_headers"}]}.

{relx, [{release, { thepower, "0.4.1" }, [tpnode, sasl, gun]},

        {sys_config, "./config/sys.config"},
        {vm_args, "./config/vm.args"},

        {dev_mode, true},
        {include_erts, true},
        {system_libs,true},
        {include_src, false},

        {extended_start_script, true}]
}.

{elvis,
    [
        #{
            dirs => ["apps/tpnode/src"],
            filter => "*.erl",
						%ruleset => erl_files,
						rules => [
											{elvis_style, line_length, #{limit => 100}},
											{elvis_style, no_trailing_whitespace}
											, { elvis_style
													, operator_spaces
													, #{rules => [{right, ","}, {right, "++"}, {left, "++"}]}
												}
											, {elvis_style, macro_names}
											, {elvis_style, macro_module_names}
											, {elvis_style, nesting_level, #{level => 5}}
											, {elvis_style, god_modules, #{limit => 25}}
											, {elvis_style, invalid_dynamic_call, #{ignore => [elvis]}}
											, {elvis_style, no_behavior_info}
											, { elvis_style
													, module_naming_convention
													, #{regex => "^([a-z][a-z0-9]*_?)*(_SUITE)?$", ignore => []}
												}
											, { elvis_style
													, function_naming_convention
													, #{regex => "^([a-z][a-z0-9]*_?)*$"}
												}
											, {elvis_style, state_record_and_type}
											, {elvis_style, no_spec_with_records}
											, {elvis_style, dont_repeat_yourself, #{min_complexity => 10}}
											, {elvis_style, no_debug_call, #{ignore => [elvis, elvis_utils]}}

										 ]
        }
    ]
}.

{profiles, [
    {rel, [{relx, [{dev_mode, false}, {include_erts, false}]}]},
    {cfgen, [
        {escript_main_app, cfgen},
        {escript_incl_apps, [tpnode]}
    ]},
    {node1, [
        {dist_node, [ {sname, rocksnode1} ]},
        {shell, [ {config, "app1.config"} ]}
    ]},
    {node2, [
        {dist_node, [ {sname, rocksnode2} ]},
        {shell, [ {config, "app2.config"} ]}
    ]},
    {node3, [
        {dist_node, [ {sname, rocksnode3} ]},
        {shell, [ {config, "app3.config"} ]}
    ]},
    {nodeb1, [
        {dist_node, [ {sname, b1} ]},
        {shell, [ {config, "b1.config"} ]}
    ]},
    {nodeb2, [
        {dist_node, [ {sname, b2} ]},
        {shell, [ {config, "b2.config"} ]}
    ]},
    {nodeb3, [
        {dist_node, [ {sname, b3} ]},
        {shell, [ {config, "b3.config"} ]}
    ]}
    ]
}.

